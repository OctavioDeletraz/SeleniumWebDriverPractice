{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-26T08:09:59.024Z",
    "end": "2023-09-26T08:10:01.618Z",
    "duration": 2594,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "725a5a52-f7e4-41ed-abde-ab796e6c4eb9",
      "title": "",
      "fullFile": "C:\\Users\\octav\\OneDrive\\Escritorio\\seleniumAdvenced\\test\\dropDown.spec.js",
      "file": "\\test\\dropDown.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b016ce97-3c4f-4577-93e4-ea002d481dc5",
          "title": "Testeo de dropdown con un select menu",
          "fullFile": "C:\\Users\\octav\\OneDrive\\Escritorio\\seleniumAdvenced\\test\\dropDown.spec.js",
          "file": "\\test\\dropDown.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Testeo de dropdown con un select menu\"",
              "fullTitle": "Testeo de dropdown con un select menu \"before each\" hook in \"Testeo de dropdown con un select menu\"",
              "timedOut": false,
              "duration": 612,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await dropDown.get_driver(\"chrome\");\nawait dropDown.maximize_window();\nawait dropDown.go_to_url(\"https://demoqa.com/select-menu\")",
              "err": {},
              "uuid": "0d74c7b5-f9f8-4e3f-b58c-52fb72802c1a",
              "parentUUID": "b016ce97-3c4f-4577-93e4-ea002d481dc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Testeo de dropdown con un select menu\"",
              "fullTitle": "Testeo de dropdown con un select menu \"after each\" hook in \"Testeo de dropdown con un select menu\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  await global.driver.quit();",
              "err": {},
              "uuid": "0458f2fe-6f01-4414-b217-a133f30d912d",
              "parentUUID": "b016ce97-3c4f-4577-93e4-ea002d481dc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Abro el multiSelector, elijo las primeras 3 opciones y valído la salida(que contenga los 3)",
              "fullTitle": "Testeo de dropdown con un select menu Abro el multiSelector, elijo las primeras 3 opciones y valído la salida(que contenga los 3)",
              "timedOut": false,
              "duration": 1980,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const colores = [\"Blue\", \"Black\", \"Red\", \"Green\"];\n        const coloresSeleccionados = [];\n        //Localizar elemento del dropdown por su ID\n        const dropDown = await global.driver.findElement(By.css(selectors.multiSelectCss));\n        await dropDown.click();\n        //Localizar el menú del dropdown con los elementos, este se activa unicamente al clickear el dropdown\n        const dropedMenu = await global.driver.wait(until.elementLocated(By.css(selectors.multiSelectMenuCss)), 2000); // Espera hasta 10 segundos\n        for (const color of colores) {\n            //Selecciono un elemento de la lista, en este caso lo busco por texto contenido\n            const selectedOption = dropedMenu.findElement(By.xpath(`//div[text()='${color}']`))\n            await selectedOption.click();\n        }\n        //Localizo el span y evaluo que el seleccionado sea igual al esperado.\n        const span = await global.driver.findElements(By.css(selectors.multiSelectSpanCss));\n        for (const promise of span) {\n            color = await promise.getText();\n            coloresSeleccionados.push(color);\n        }\n        for (let index = 0; index < colores.length; index++) {\n            assert.equal(coloresSeleccionados[index], colores[index]);\n            console.log(coloresSeleccionados[index]);\n        }",
              "err": {},
              "uuid": "5afcec63-e823-4155-b8e6-562b413aa668",
              "parentUUID": "b016ce97-3c4f-4577-93e4-ea002d481dc5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5afcec63-e823-4155-b8e6-562b413aa668"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1980,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/octav/OneDrive/Escritorio/seleniumAdvenced/TestsReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}